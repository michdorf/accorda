"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var fs = require('fs');

console.warn('\x1b[34m', 'ðŸ‘· Building suffix normalize mapping from suffix-mapping.txt');
fs.readFile('src/normalize_mappings/suffix-mapping.txt', function (err, data) {
  if (err) throw err;
  var suffixs = [];
  data.toString().split('\n').map(function (line) {
    var items = line.split(',');
    var cleanStringsArray = [];
    items.forEach(function (item) {
      cleanStringsArray.push(item.trim());
    });
    suffixs.push(cleanStringsArray);
    return suffixs;
  });
  var flatObject = {};
  suffixs.forEach(function (line) {
    line.forEach(function (item) {
      flatObject = _objectSpread(_defineProperty({}, item, line[0]), flatObject);
    });
  });
  var suffixMappingJson = JSON.stringify(flatObject, null, 2);
  var suffixMappingJs = "export default ".concat(suffixMappingJson, ";\n");
  fs.writeFile('src/normalize_mappings/suffix-normalize-mapping.js', suffixMappingJs, 'utf-8', function (error) {
    if (error) throw error;
    console.warn('\x1b[32m', 'âœ¨ Sucessfully built suffix-normalize-mapping.js');
  });
});